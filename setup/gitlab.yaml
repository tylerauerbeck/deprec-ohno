---
# Source: do500/templates/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: "gitlab"
---
# Source: do500/templates/gitlab/serviceaccounts.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: "gitlab-ce-user"
---
# Source: do500/templates/gitlab/volumeclaims.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: "gitlab-ce-redis-data"
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: "1Gi"
---
# Source: do500/templates/gitlab/volumeclaims.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: "gitlab-ce-etc"
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: "1Gi"
---
# Source: do500/templates/gitlab/volumeclaims.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: "gitlab-ce-data"
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: "1Gi"
---
# Source: do500/templates/gitlab/volumeclaims.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: "gitlab-ce-postgresql"
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: "2Gi"
---
# Source: do500/templates/gitlab/anyuid-scc.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:openshift:scc:anyuid
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:openshift:scc:anyuid
subjects:
- kind: ServiceAccount
  name: gitlab-ce-user
  namespace: gitlab
---
# Source: do500/templates/gitlab/services.yaml
kind: Service
apiVersion: v1
metadata:
  name: "gitlab-ce"
  labels:
    app: "gitlab-ce"
spec:
  ports:
  - name: 22-ssh
    protocol: TCP
    port: 22
    targetPort: 22
  - name: 80-http
    protocol: TCP
    port: 80
    targetPort: 80
  selector:
    app: "gitlab-ce"
    deploymentconfig: "gitlab-ce"
  type: ClusterIP
  sessionAffinity: None
---
# Source: do500/templates/gitlab/services.yaml
kind: Service
apiVersion: v1
metadata:
  name: "gitlab-ce-redis"
  labels:
    app: "gitlab-ce"
spec:
  ports:
  - name: 6379-redis
    protocol: TCP
    port: 6379
    targetPort: 6379
  selector:
    app: "gitlab-ce"
    deploymentconfig: "gitlab-ce-redis"
  type: ClusterIP
  sessionAffinity: None
---
# Source: do500/templates/gitlab/services.yaml
kind: Service
apiVersion: v1
metadata:
  name: "gitlab-ce-postgresql"
  labels:
    app: "gitlab-ce"
spec:
  ports:
  - name: 5432-postgresql
    protocol: TCP
    port: 5432
    targetPort: 5432
  selector:
    app: "gitlab-ce"
    deploymentconfig: "gitlab-ce-postgresql"
  type: ClusterIP
  sessionAffinity: None
---
# Source: do500/templates/gitlab/deployments.yaml
kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: "gitlab-ce"
  labels:
    app: "gitlab-ce"
spec:
  strategy:
    type: Recreate
  triggers:
  - type: ConfigChange
  - type: ImageChange
    imageChangeParams:
      automatic: true
      containerNames:
      - gitlab-ce
      from:
        kind: ImageStreamTag
        name: "gitlab-ce:gitlab-12.8.7"
  replicas: 1
  test: false
  selector:
    app: "gitlab-ce"
    deploymentconfig: "gitlab-ce"
  template:
    metadata:
      labels:
        app: "gitlab-ce"
        deploymentconfig: "gitlab-ce"
    spec:
      volumes:
      - name: gitlab-ce-volume-1
        persistentVolumeClaim:
          claimName: "gitlab-ce-etc"
      - name: gitlab-ce-volume-2
        persistentVolumeClaim:
          claimName: "gitlab-ce-data"
      containers:
      - name: gitlab-ce
        image: gitlab-ce
        ports:
        - containerPort: 22
          protocol: TCP
        - containerPort: 80 
          protocol: TCP
        env:
        - name: GITLAB_OMNIBUS_CONFIG
          value:
            root_pass='Password123';
            external_url "https://gitlab-ce.example.com";
            nginx['listen_port']=80;
            nginx['listen_https']=false;
            gitlab_rails['initial_root_password']=root_pass;
            gitlab_rails['gitlab_port']=80;
            letsencrypt['enable'] = false;
            postgresql['enable']=false;
            gitlab_rails['db_host'] = 'gitlab-ce-postgresql';
            gitlab_rails['db_password']='vnJWLXpozt';
            gitlab_rails['db_username']='Kb8w7b0fQV';
            gitlab_rails['db_database']='gitlabhq_production';
            redis['enable'] = false; 
            gitlab_rails['redis_host']='gitlab-ce-redis';
            unicorn['worker_processes'] = 2; 
            manage_accounts['enable'] = true;
            manage_storage_directories['manage_etc'] = false; 
            gitlab_shell['auth_file'] = '/gitlab-data/ssh/authorized_keys';
            git_data_dirs({ 'default' => { 'path' => '/gitlab-data/git-data' } });
            gitlab_rails['shared_path'] = '/gitlab-data/shared'; 
            gitlab_rails['uploads_directory'] = '/gitlab-data/uploads';
            gitlab_ci['builds_directory'] = '/gitlab-data/builds';
            prometheus_monitoring['enable'] = false;
            gitlab_rails['rack_attack_git_basic_auth'] = { 'enabled' => false, };
            gitlab_rails['gitlab_signup_enabled'] = false;
        resources:
          limits:
            cpu: '2'
            memory: 6Gi
          requests:
            cpu: 500m
            memory: 1Gi
        volumeMounts:
        - name: gitlab-ce-volume-1
          mountPath: "/etc/gitlab"
        - name: gitlab-ce-volume-2
          mountPath: "/gitlab-data"
        livenessProbe:
          httpGet:
            path: "/help"
            port: 80 
            scheme: HTTP
          initialDelaySeconds: 120
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: "/help"
            port: 80 
            scheme: HTTP
          initialDelaySeconds: 20
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        terminationMessagePath: "/dev/termination-log"
        imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccount: "gitlab-ce-user"
---
# Source: do500/templates/gitlab/deployments.yaml
kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: "gitlab-ce-redis"
  labels:
    app: "gitlab-ce"
spec:
  strategy:
    type: Recreate
    recreateParams: {}
    resources: {}
  triggers:
  - type: ConfigChange
  - type: ImageChange
    imageChangeParams:
      automatic: true
      containerNames:
      - gitlab-ce-redis
      from:
        kind: ImageStreamTag
        name: "gitlab-ce-redis:5.0.4"
  replicas: 1
  test: false
  selector:
    app: "gitlab-ce"
    deploymentconfig: "gitlab-ce-redis"
  template:
    metadata:
      labels:
        app: "gitlab-ce"
        deploymentconfig: "gitlab-ce-redis"
    spec:
      volumes:
      - name: gitlab-ce-volume-4
        persistentVolumeClaim:
          claimName: "gitlab-ce-redis-data"
      containers:
      - name: gitlab-ce-redis
        image: gitlab-ce-redis
        command:
        - "/bin/sh"
        - "-ec"
        args:
        - exec redis-server
        ports:
        - containerPort: 6379
          protocol: TCP
        resources:
          limits:
            cpu: '1'
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 300Mi
        volumeMounts:
        - name: gitlab-ce-volume-4
          mountPath: "/data"
        terminationMessagePath: "/dev/termination-log"
        imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
---
# Source: do500/templates/gitlab/deployments.yaml
kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: "gitlab-ce-postgresql"
  labels:
    app: "gitlab-ce"
spec:
  strategy:
    type: Recreate
    recreateParams:
      post:
        failurePolicy: Abort
        execNewPod:
          containerName: gitlab-ce-postgresql
          command:
          - "/usr/bin/scl"
          - enable
          - rh-postgresql96
          - export PGPASSWORD='bpfKgpgc4j'; psql -h 'gitlab-ce-postgresql'
            -U postgres -d gitlabhq_production -c 'CREATE EXTENSION IF NOT EXISTS
            pg_trgm;'
          env:
          - name: HOME
            value: "/var/lib/pgsql"
          - name: PGDATA
            value: "/var/lib/pgsql/data/userdata"
          - name: CONTAINER_SCRIPTS_PATH
            value: "/usr/share/container-scripts/postgresql"
    resources: {}
  triggers:
  - type: ConfigChange
  - type: ImageChange
    imageChangeParams:
      automatic: true
      containerNames:
      - gitlab-ce-postgresql
      from:
        kind: ImageStreamTag
        name: postgresql:latest
      #  namespace: do500-gitlab
  replicas: 1
  test: false
  selector:
    app: "gitlab-ce"
    deploymentconfig: "gitlab-ce-postgresql"
  template:
    metadata:
      labels:
        app: "gitlab-ce"
        deploymentconfig: "gitlab-ce-postgresql"
    spec:
      volumes:
      - name: gitlab-ce-volume-3
        persistentVolumeClaim:
          claimName: "gitlab-ce-postgresql"
      containers:
      - name: gitlab-ce-postgresql
        image: gitlab-ce-postgresql
        ports:
        - containerPort: 5432
          protocol: TCP
        readinessProbe:
          timeoutSeconds: 1
          initialDelaySeconds: 5
          exec:
            command:
            - "/bin/sh"
            - "-i"
            - "-c"
            - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
              'SELECT 1'
        livenessProbe:
          timeoutSeconds: 1
          initialDelaySeconds: 30
          tcpSocket:
            port: 5432
        env:
        - name: POSTGRESQL_USER
          value: "Kb8w7b0fQV"
        - name: POSTGRESQL_PASSWORD
          value: "vnJWLXpozt"
        - name: POSTGRESQL_DATABASE
          value: "gitlabhq_production"
        - name: POSTGRESQL_ADMIN_PASSWORD
          value: "bpfKgpgc4j"
        resources:
          limits:
            cpu: '1'
            memory: 1024Mi
          requests:
            cpu: 300m
            memory: 300Mi
        volumeMounts:
        - name: gitlab-ce-volume-3
          mountPath: "/var/lib/pgsql/data"
        terminationMessagePath: "/dev/termination-log"
        imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
---
# Source: do500/templates/gitlab/imagestreams.yaml
kind: ImageStream
apiVersion: image.openshift.io/v1
metadata:
  name: "gitlab-ce"
  labels:
    app: "gitlab-ce"
spec:
  tags:
  - name: gitlab-12.8.7
    from:
      kind: DockerImage
      name: gitlab/gitlab-ce:12.8.7-ce.0
---
# Source: do500/templates/gitlab/imagestreams.yaml
kind: ImageStream
apiVersion: image.openshift.io/v1
metadata:
  name: "gitlab-ce-redis"
  labels:
    app: "gitlab-ce"
spec:
  tags:
  - name: 5.0.4
    from:
      kind: DockerImage
      name: redis:5.0.4-alpine
---
# Source: do500/templates/gitlab/imagestreams.yaml
kind: ImageStream
apiVersion: image.openshift.io/v1
metadata:
  name: "postgresql"
  labels:
    app: "gitlab-ce"
spec:
  tags:
  - name: latest
    from:
      kind: DockerImage
      name: registry.redhat.io/rhscl/postgresql-96-rhel7
---
# Source: do500/templates/gitlab/routes.yaml
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: "gitlab-ce"
  labels:
    app: "gitlab-ce"
spec:
  to:
    kind: Service
    name: "gitlab-ce"
    weight: 100
  port:
    targetPort: 80-http
  tls:
    termination: edge 
    insecureEdgeTerminationPolicy: Redirect
  wildcardPolicy: None
